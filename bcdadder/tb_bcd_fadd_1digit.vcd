$date
	Fri Jun 10 01:48:58 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_bcd_fadd_1digit $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum_binAdd [3:0] $end
$var wire 4 ) cout_binAdd [3:0] $end
$var reg 1 " cout $end
$var reg 4 * sum [3:0] $end
$scope begin fa[1] $end
$scope module fadd_inst1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope begin fa[2] $end
$scope module fadd_inst1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin fa[3] $end
$scope module fadd_inst1 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$scope module fadd_inst0 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 % cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#50000
b1 !
b1 *
b1 (
1=
1:
b1 #
b1 &
#75000
1/
1-
b10 !
b10 *
b1 )
1<
b10 (
0=
1;
b1 $
b1 '
#100000
04
0-
02
b11 !
b11 *
0<
1/
b0 )
0.
b11 (
1=
1+
0:
b10 #
b10 &
#150000
14
12
b101 !
b101 *
b10 )
1.
b101 (
0/
1:
1,
0;
b11 #
b11 &
b10 $
b10 '
#200000
02
0"
09
0.
07
b110 !
b110 *
1/
14
b0 )
03
b110 (
0=
0+
10
0:
b100 #
b100 &
#225000
b111 !
b111 *
b111 (
1=
1;
b11 $
b11 '
#250000
19
17
13
04
12
1.
0/
1-
b1000 !
b1000 *
b111 )
1<
b1000 (
0=
1:
b101 #
b101 &
#300000
02
0.
1/
0-
1"
b0 !
b0 *
b100 )
0<
b1010 (
04
1+
0:
0,
11
0;
b110 #
b110 &
b100 $
b100 '
#350000
b1 !
b1 *
b1011 (
1=
1:
b111 #
b111 &
#375000
14
12
1"
1.
0/
1-
b10 !
b10 *
b111 )
1<
b1100 (
0=
1;
b101 $
b101 '
#400000
07
03
0-
02
b11 !
b11 *
0<
0/
0.
14
19
b0 )
08
b1101 (
1=
0+
00
15
0:
b1000 #
b1000 &
#450000
b101 !
b101 *
b1111 (
1/
1:
1,
0;
b1001 #
b1001 &
b110 $
b110 '
#500000
0"
b110 !
b110 *
09
b110 (
0=
05
0:
b0 #
b0 &
#525000
b111 !
b111 *
b111 (
1=
1;
b111 $
b111 '
#550000
19
17
13
04
12
1.
0/
1-
b1000 !
b1000 *
b111 )
1<
b1000 (
0=
1:
b1 #
b1 &
#600000
02
0.
1/
07
0-
03
1"
b0 !
b0 *
08
b0 )
0<
04
b1010 (
19
1+
0:
0,
01
16
0;
b10 #
b10 &
b1000 $
b1000 '
#650000
b1 !
b1 *
b1011 (
1=
1:
b11 #
b11 &
#675000
14
12
1"
1.
0/
1-
b10 !
b10 *
b11 )
1<
b1100 (
0=
1;
b1001 $
b1001 '
#700000
08
1"
19
0-
02
07
b11 !
b11 *
0<
0/
0.
14
b0 )
03
b1101 (
1=
0+
10
0:
b100 #
b100 &
#750000
0"
b101 !
b101 *
b101 (
09
1:
06
0;
b101 #
b101 &
b0 $
b0 '
#800000
b110 !
b110 *
1/
b110 (
0=
1+
0:
b110 #
b110 &
#825000
b111 !
b111 *
b111 (
1=
1;
b1 $
b1 '
#850000
19
17
13
04
12
1.
0/
1-
b1000 !
b1000 *
b111 )
1<
b1000 (
0=
1:
b111 #
b111 &
#900000
02
0.
1/
0-
07
1"
b0 !
b0 *
0<
04
03
b1010 (
19
b0 )
08
0+
00
15
0:
1,
0;
b1000 #
b1000 &
b10 $
b10 '
#950000
b1 !
b1 *
b1011 (
1=
1:
b1001 #
b1001 &
#975000
14
12
1.
1"
0/
1-
b10 !
b10 *
b11 )
1<
b1100 (
0=
1;
b11 $
b11 '
#1000000
0"
09
b100 !
b100 *
05
0:
b100 (
0=
b0 #
b0 &
1%
#1050000
0"
09
02
07
0.
b110 !
b110 *
b1 )
03
1/
b110 (
14
1:
0,
11
0;
b1 #
b1 &
b100 $
b100 '
#1100000
0"
09
07
03
14
02
0.
0-
b110 !
b110 *
b0 )
0<
1+
0:
b110 (
0=
b10 #
b10 &
0%
#1125000
b111 !
b111 *
b111 (
1=
1;
b101 $
b101 '
#1150000
19
17
13
04
12
1.
0/
1-
b1000 !
b1000 *
b111 )
1<
b1000 (
0=
1:
b11 #
b11 &
#1200000
02
0.
1/
0-
1"
b0 !
b0 *
b100 )
0<
b1010 (
04
0+
10
0:
1,
0;
b100 #
b100 &
b110 $
b110 '
#1250000
b1 !
b1 *
b1011 (
1=
1:
b101 #
b101 &
#1275000
14
12
1.
1"
0/
1-
b10 !
b10 *
b111 )
1<
b1100 (
0=
1;
b111 $
b111 '
#1300000
0-
b11 !
b11 *
b110 )
0<
0/
b1101 (
1=
1+
0:
b110 #
b110 &
#1350000
07
03
02
0.
b101 !
b101 *
b0 )
08
1/
14
b1111 (
19
1:
0,
01
16
0;
b111 #
b111 &
b1000 $
b1000 '
#1400000
b1000 )
18
1"
b110 !
b110 *
0/
04
09
b0 (
0=
0+
00
15
0:
b1000 #
b1000 &
#1425000
b111 !
b111 *
b1 (
1=
1;
b1001 $
b1001 '
#1450000
1/
1-
b1000 !
b1000 *
b1001 )
1<
b10 (
0=
1:
b1001 #
b1001 &
#1500000
b0 (
0/
0-
0"
b0 !
b0 *
08
b0 )
0<
05
0:
06
0;
b0 #
b0 &
b0 $
b0 '
#1550000
b1 !
b1 *
b1 (
1=
1:
b1 #
b1 &
#1575000
1/
1-
b10 !
b10 *
b1 )
1<
b10 (
0=
1;
b1 $
b1 '
#1600000
04
0-
02
b11 !
b11 *
0<
1/
b0 )
0.
b11 (
1=
1+
0:
b10 #
b10 &
#1650000
14
12
b101 !
b101 *
b10 )
1.
b101 (
0/
1:
1,
0;
b11 #
b11 &
b10 $
b10 '
#1700000
02
0"
09
0.
07
b110 !
b110 *
1/
14
b0 )
03
b110 (
0=
0+
10
0:
b100 #
b100 &
#1725000
b111 !
b111 *
b111 (
1=
1;
b11 $
b11 '
#1750000
19
17
13
04
12
1.
0/
1-
b1000 !
b1000 *
b111 )
1<
b1000 (
0=
1:
b101 #
b101 &
#1800000
02
0.
1/
0-
1"
b0 !
b0 *
b100 )
0<
b1010 (
04
1+
0:
0,
11
0;
b110 #
b110 &
b100 $
b100 '
#1850000
b1 !
b1 *
b1011 (
1=
1:
b111 #
b111 &
#1875000
14
12
1"
1.
0/
1-
b10 !
b10 *
b111 )
1<
b1100 (
0=
1;
b101 $
b101 '
#1900000
07
03
0-
02
b11 !
b11 *
0<
0/
0.
14
19
b0 )
08
b1101 (
1=
0+
00
15
0:
b1000 #
b1000 &
#1950000
b101 !
b101 *
b1111 (
1/
1:
1,
0;
b1001 #
b1001 &
b110 $
b110 '
#2000000
07
03
14
02
0.
0"
1/
09
0-
b111 !
b111 *
b0 )
0<
05
0:
b111 (
1=
b0 #
b0 &
1%
