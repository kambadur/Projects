$date
	Sat Jun  4 05:24:39 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_fadd32 $end
$var wire 32 ! sum [31:0] $end
$var wire 1 " cout $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 1 % cin $end
$var wire 32 ( sum [31:0] $end
$var wire 1 " cout $end
$var wire 32 ) c_prop [31:0] $end
$scope begin fa[1] $end
$scope module fadd_x $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 1 . sum $end
$upscope $end
$upscope $end
$scope begin fa[2] $end
$scope module fadd_x $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 sum $end
$upscope $end
$upscope $end
$scope begin fa[3] $end
$scope module fadd_x $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope begin fa[4] $end
$scope module fadd_x $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope begin fa[5] $end
$scope module fadd_x $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ cin $end
$var wire 1 A cout $end
$var wire 1 B sum $end
$upscope $end
$upscope $end
$scope begin fa[6] $end
$scope module fadd_x $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$scope begin fa[7] $end
$scope module fadd_x $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J cin $end
$var wire 1 K cout $end
$var wire 1 L sum $end
$upscope $end
$upscope $end
$scope begin fa[8] $end
$scope module fadd_x $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q sum $end
$upscope $end
$upscope $end
$scope begin fa[9] $end
$scope module fadd_x $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T cin $end
$var wire 1 U cout $end
$var wire 1 V sum $end
$upscope $end
$upscope $end
$scope begin fa[10] $end
$scope module fadd_x $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y cin $end
$var wire 1 Z cout $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$scope begin fa[11] $end
$scope module fadd_x $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ cin $end
$var wire 1 _ cout $end
$var wire 1 ` sum $end
$upscope $end
$upscope $end
$scope begin fa[12] $end
$scope module fadd_x $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c cin $end
$var wire 1 d cout $end
$var wire 1 e sum $end
$upscope $end
$upscope $end
$scope begin fa[13] $end
$scope module fadd_x $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h cin $end
$var wire 1 i cout $end
$var wire 1 j sum $end
$upscope $end
$upscope $end
$scope begin fa[14] $end
$scope module fadd_x $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m cin $end
$var wire 1 n cout $end
$var wire 1 o sum $end
$upscope $end
$upscope $end
$scope begin fa[15] $end
$scope module fadd_x $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r cin $end
$var wire 1 s cout $end
$var wire 1 t sum $end
$upscope $end
$upscope $end
$scope begin fa[16] $end
$scope module fadd_x $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 w cin $end
$var wire 1 x cout $end
$var wire 1 y sum $end
$upscope $end
$upscope $end
$scope begin fa[17] $end
$scope module fadd_x $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ sum $end
$upscope $end
$upscope $end
$scope begin fa[18] $end
$scope module fadd_x $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" cin $end
$var wire 1 $" cout $end
$var wire 1 %" sum $end
$upscope $end
$upscope $end
$scope begin fa[19] $end
$scope module fadd_x $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" cin $end
$var wire 1 )" cout $end
$var wire 1 *" sum $end
$upscope $end
$upscope $end
$scope begin fa[20] $end
$scope module fadd_x $end
$var wire 1 +" a $end
$var wire 1 ," b $end
$var wire 1 -" cin $end
$var wire 1 ." cout $end
$var wire 1 /" sum $end
$upscope $end
$upscope $end
$scope begin fa[21] $end
$scope module fadd_x $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 2" cin $end
$var wire 1 3" cout $end
$var wire 1 4" sum $end
$upscope $end
$upscope $end
$scope begin fa[22] $end
$scope module fadd_x $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 7" cin $end
$var wire 1 8" cout $end
$var wire 1 9" sum $end
$upscope $end
$upscope $end
$scope begin fa[23] $end
$scope module fadd_x $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 <" cin $end
$var wire 1 =" cout $end
$var wire 1 >" sum $end
$upscope $end
$upscope $end
$scope begin fa[24] $end
$scope module fadd_x $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 A" cin $end
$var wire 1 B" cout $end
$var wire 1 C" sum $end
$upscope $end
$upscope $end
$scope begin fa[25] $end
$scope module fadd_x $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" cin $end
$var wire 1 G" cout $end
$var wire 1 H" sum $end
$upscope $end
$upscope $end
$scope begin fa[26] $end
$scope module fadd_x $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 K" cin $end
$var wire 1 L" cout $end
$var wire 1 M" sum $end
$upscope $end
$upscope $end
$scope begin fa[27] $end
$scope module fadd_x $end
$var wire 1 N" a $end
$var wire 1 O" b $end
$var wire 1 P" cin $end
$var wire 1 Q" cout $end
$var wire 1 R" sum $end
$upscope $end
$upscope $end
$scope begin fa[28] $end
$scope module fadd_x $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 U" cin $end
$var wire 1 V" cout $end
$var wire 1 W" sum $end
$upscope $end
$upscope $end
$scope begin fa[29] $end
$scope module fadd_x $end
$var wire 1 X" a $end
$var wire 1 Y" b $end
$var wire 1 Z" cin $end
$var wire 1 [" cout $end
$var wire 1 \" sum $end
$upscope $end
$upscope $end
$scope begin fa[30] $end
$scope module fadd_x $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 _" cin $end
$var wire 1 `" cout $end
$var wire 1 a" sum $end
$upscope $end
$upscope $end
$scope begin fa[31] $end
$scope module fadd_x $end
$var wire 1 b" a $end
$var wire 1 c" b $end
$var wire 1 d" cin $end
$var wire 1 e" cout $end
$var wire 1 f" sum $end
$upscope $end
$upscope $end
$scope module fadd_0 $end
$var wire 1 g" a $end
$var wire 1 h" b $end
$var wire 1 % cin $end
$var wire 1 i" cout $end
$var wire 1 j" sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#25000
1[
1Y
1U
0V
1T
1P
03
08
0=
0B
0G
0L
0Q
0`
0e
0j
0o
0t
0y
0~
0%"
0*"
0/"
04"
09"
0>"
0C"
0H"
0M"
0R"
0W"
0\"
0a"
0f"
1.
01
06
0;
0@
0E
0J
1O
0^
0c
0h
0m
0r
0w
0|
0#"
0("
0-"
02"
07"
0<"
0A"
0F"
0K"
0P"
0U"
0Z"
0_"
0d"
0"
1,
0-
02
07
0<
0A
0F
1K
0Z
0_
0d
0i
0n
0s
0x
0}
0$"
0)"
0."
03"
08"
0="
0B"
0G"
0L"
0Q"
0V"
0["
0`"
0e"
b1110000001 )
1i"
b10000000010 !
b10000000010 (
0j"
0+
00
05
0:
0?
0D
1I
0N
0S
0X
0]
0b
0g
0l
0q
0v
0{
0""
0'"
0,"
01"
06"
0;"
0@"
0E"
0J"
0O"
0T"
0Y"
0^"
0c"
1h"
0*
0/
04
09
0>
0C
1H
1M
1R
0W
0\
0a
0f
0k
0p
0u
0z
0!"
0&"
0+"
00"
05"
0:"
0?"
0D"
0I"
0N"
0S"
0X"
0]"
0b"
1g"
0%
b10000001 $
b10000001 '
b1110000001 #
b1110000001 &
#75000
b10000000011 !
b10000000011 (
1j"
1%
#175000
