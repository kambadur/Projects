$date
	Fri Jun  3 20:31:15 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_fadd3 $end
$var wire 3 ! sum [2:0] $end
$var wire 3 " cout [2:0] $end
$var reg 3 # a [2:0] $end
$var reg 3 $ b [2:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 3 & a [2:0] $end
$var wire 3 ' b [2:0] $end
$var wire 1 % cin $end
$var wire 3 ( sum [2:0] $end
$var wire 3 ) cout [2:0] $end
$scope module fadd_1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$upscope $end
$scope module fadd_2 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cin $end
$var wire 1 1 cout $end
$var wire 1 2 sum $end
$upscope $end
$scope module fadd_3 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
bx "
bx !
$end
#25000
17
02
15
00
11
16
b110 "
b110 )
0,
b101 !
b101 (
1-
0+
1/
14
1*
1.
13
0%
b110 $
b110 '
b111 #
b111 &
#125000
